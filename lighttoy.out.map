Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
                              main.o (__divmodhi4)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o (exit)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

maxtimer            0x2               main.o
diry                0x1               main.o
state               0x1               main.o
posx                0x1               main.o
dirx                0x1               main.o
statetimer          0x2               main.o
apples              0x5               main.o
counter             0x1               main.o
matrix              0x80              main.o
posy                0x1               main.o
delay               0x2               main.o
wallbrightness      0x2               main.o
inttimer            0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/libm.a
LOAD main.o
LOAD /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6c4
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000034                . = ALIGN (0x2)
                0x0000000000000034                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000034        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000034                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000034                __ctors_start = .
 *(.ctors)
                0x0000000000000034                __ctors_end = .
                0x0000000000000034                __dtors_start = .
 *(.dtors)
                0x0000000000000034                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000034        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o
                0x0000000000000034                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000034        0xc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000040       0x16 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
                0x0000000000000040                __do_copy_data
 .init4         0x0000000000000056       0x10 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000056                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000066        0x4 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o
 *(.init9)
 *(.text)
 .text          0x000000000000006a        0x2 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o
                0x000000000000006a                __vector_22
                0x000000000000006a                __vector_1
                0x000000000000006a                __vector_24
                0x000000000000006a                __vector_12
                0x000000000000006a                __bad_interrupt
                0x000000000000006a                __vector_6
                0x000000000000006a                __vector_3
                0x000000000000006a                __vector_23
                0x000000000000006a                __vector_25
                0x000000000000006a                __vector_13
                0x000000000000006a                __vector_17
                0x000000000000006a                __vector_19
                0x000000000000006a                __vector_7
                0x000000000000006a                __vector_5
                0x000000000000006a                __vector_4
                0x000000000000006a                __vector_9
                0x000000000000006a                __vector_2
                0x000000000000006a                __vector_21
                0x000000000000006a                __vector_15
                0x000000000000006a                __vector_8
                0x000000000000006a                __vector_10
                0x000000000000006a                __vector_16
                0x000000000000006a                __vector_18
                0x000000000000006a                __vector_20
 .text          0x000000000000006c      0x52e main.o
                0x000000000000006c                erase_screen
                0x000000000000009c                copy_image
                0x0000000000000108                draw_circle
                0x0000000000000162                draw_outline
                0x00000000000001ba                update_sinecircle
                0x00000000000001dc                update_sine
                0x00000000000002c2                update_smiley
                0x00000000000002d0                update_tree
                0x00000000000002f2                update_bouncer
                0x0000000000000378                configure_sine
                0x000000000000039e                configure_sinecircle
                0x00000000000003c4                configure_timer0
                0x00000000000003e6                configure_timer1
                0x000000000000041c                setup
                0x0000000000000466                __vector_14
                0x00000000000004b8                __vector_11
 .text          0x000000000000059a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
 .text          0x000000000000059a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text          0x000000000000059a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000059a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
 .text          0x000000000000059a        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
                0x000000000000059a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000059a       0xd8 main.o
                0x000000000000059a                main
 .text.libgcc.mul
                0x0000000000000672        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000672       0x26 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
                0x0000000000000672                __divmodhi4
                0x0000000000000672                _div
 .text.libgcc   0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000698        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000698       0x28 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000698                __udivmodhi4
 .text.libgcc   0x00000000000006c0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000006c0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000006c0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000006c0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
                0x00000000000006c0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006c0        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
                0x00000000000006c0                exit
                0x00000000000006c0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006c0        0x4 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006c4                _etext = .

.data           0x0000000000800100       0x98 load address 0x00000000000006c4
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o
 .data          0x0000000000800100       0x98 main.o
                0x0000000000800100                treemap
                0x0000000000800118                sinecirclemap
                0x0000000000800170                sinemap
                0x0000000000800190                smileymap
 .data          0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800198                . = ALIGN (0x2)
                0x0000000000800198                _edata = .
                0x0000000000800198                PROVIDE (__data_end, .)

.bss            0x0000000000800198       0x94
                0x0000000000800198                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o
 .bss           0x0000000000800198        0x0 main.o
 .bss           0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800198        0x0 /usr/lib/gcc/avr/4.7.0/avr4/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800198       0x94 main.o
                0x0000000000800198                maxtimer
                0x000000000080019a                diry
                0x000000000080019b                state
                0x000000000080019c                posx
                0x000000000080019d                dirx
                0x000000000080019e                statetimer
                0x00000000008001a0                apples
                0x00000000008001a5                counter
                0x00000000008001a6                matrix
                0x0000000000800226                posy
                0x0000000000800227                delay
                0x0000000000800229                wallbrightness
                0x000000000080022b                inttimer
                0x000000000080022c                PROVIDE (__bss_end, .)
                0x00000000000006c4                __data_load_start = LOADADDR (.data)
                0x000000000000075c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080022c        0x0
                0x000000000080022c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080022c                PROVIDE (__noinit_end, .)
                0x000000000080022c                _end = .
                0x000000000080022c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x17b8
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o
 .stab          0x00000000000006cc     0x10ec main.o
                                       0x10f8 (size before relaxing)

.stabstr        0x0000000000000000      0xd83
 *(.stabstr)
 .stabstr       0x0000000000000000      0xd83 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr4/crtm48.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(lighttoy.out elf32-avr)
LOAD linker stubs
